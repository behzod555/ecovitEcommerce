@font-face {
	font-family: "Montserrat";
	src: url(../font/Montserrat/Montserrat-Medium.woff2) format("woff2"),
		url(../font/Montserrat/Montserrat-Medium.woff) format("woff");
	font-weight: 500;
	font-style: normal;
}
@font-face {
	font-family: "Montserrat";
	src: url(../font/Montserrat/Montserrat-SemiBold.woff2) format("woff2"),
		url(../font/Montserrat/Montserrat-SemiBold.woff) format("woff");
	font-weight: 600;
	font-style: normal;
}
@font-face {
	font-family: "Montserrat-alternates";
	src: url(../font/Montserrat_Alternates/MontserratAlternates-Regular.woff2) format("woff2"),
		url(../font/Montserrat_Alternates/MontserratAlternates-Regular.woff) format("woff");
	font-weight: 400;
	font-style: normal;
}
@font-face {
	font-family: "Montserrat-alternates";
	src: url(../font/Montserrat_Alternates/MontserratAlternates-Medium.woff2) format("woff2"),
		url(../font/Montserrat_Alternates/MontserratAlternates-Medium.woff) format("woff");
	font-weight: 500;
	font-style: normal;
}
@font-face {
	font-family: "Montserrat-alternates";
	src: url(../font/Montserrat_Alternates/MontserratAlternates-SemiBold.woff2) format("woff2"),
		url(../font/Montserrat_Alternates/MontserratAlternates-SemiBold.woff) format("woff");
	font-weight: 600;
	font-style: normal;
}
@font-face {
	font-family: "Montserrat-alternates";
	src: url(../font/Montserrat_Alternates/MontserratAlternates-Bold.woff2) format("woff2"),
		url(../font/Montserrat_Alternates/MontserratAlternates-Bold.woff) format("woff");
	font-weight: 700;
	font-style: normal;
}
@font-face {
	font-family: "Montserrat-alternates";
	src: url(../font/Montserrat_Alternates/MontserratAlternates-ExtraBold.woff2) format("woff2"),
		url(../font/Montserrat_Alternates/MontserratAlternates-ExtraBold.woff) format("woff");
	font-weight: 800;
	font-style: normal;
}
* {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
body,
html {
	height: 100%;
}
html {
	scroll-behavior: smooth;
}
body {
	font: 400 20px/1.2 "Montserrat-alternates";
	overflow-x: hidden;
}
body.noScroll {
	overflow-y: hidden;
}
ul {
	list-style: none;
}
a {
	text-decoration: none;
	color: inherit;
}
.btn-reset {
	background: 0 0;
	outline: 0;
	border: 0;
	cursor: pointer;
}
.btn-hover {
	-webkit-transition: opacity 0.2s linear;
	-o-transition: opacity 0.2s linear;
	transition: opacity 0.2s linear;
}
.btn-hover:hover {
	opacity: 0.9;
}
.container {
	max-width: 1234px;
	width: 100%;
	margin: 0 auto;
	padding: 0 20px;
}
.input {
	border: 0;
	background: #fff;
	-webkit-box-shadow: 2px 2px 25px rgba(22, 62, 8, 0.2);
	box-shadow: 2px 2px 25px rgba(22, 62, 8, 0.2);
	border-radius: 10px;
	outline: 0;
}
.input--border {
	border: 1px solid #7abc51;
}
.title {
	text-align: center;
	font-weight: 600;
	font-size: 56px;
	color: #000;
}
.btn {
	background: #7abc51;
	color: #fff;
	font-weight: 700;
	font-size: 20px;
}
.disabled {
	display: none !important;
}
.scroll-up a,
.wrapper {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.wrapper {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	min-height: 100%;
}
.main {
	-webkit-box-flex: 1;
	-ms-flex: 1 0 auto;
	flex: 1 0 auto;
}
.footer {
	-webkit-box-flex: 0;
	-ms-flex: 0 0 auto;
	flex: 0 0 auto;
}
.scroll-up,
.subheader {
	background: #7abc51;
	z-index: 10;
}
.scroll-up {
	position: fixed;
	right: -20%;
	bottom: 200px;
	height: 42px;
	width: 42px;
	border-radius: 8px;
	opacity: 0.5;
	-webkit-transition: opacity 0.2s ease-in-out, right 0.3s ease-in-out;
	-o-transition: opacity 0.2s ease-in-out, right 0.3s ease-in-out;
	transition: opacity 0.2s ease-in-out, right 0.3s ease-in-out;
	cursor: pointer;
}
.scroll-up a {
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	height: 100%;
	width: 100%;
}
.scroll-up:hover {
	opacity: 1;
}
.scroll-up.show-scroll {
	right: 200px;
}
.subheader {
	position: relative;
	-webkit-box-shadow: 0 4px 25px rgba(0, 0, 0, 0.2);
	box-shadow: 0 4px 25px rgba(0, 0, 0, 0.2);
}
.subheader__container {
	font: 20px "Montserrat-alternates";
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding-top: 14px;
	padding-bottom: 14px;
	color: #fff;
}
.subheader__text {
	font-weight: 500;
}
.subheader__text span {
	font-weight: 800;
}
.subheader__number {
	font-weight: 800;
	font-size: 17px;
}
.socials-list,
.socials-list__item {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.socials-list__item {
	-webkit-transition: 0.2s linear;
	-o-transition: 0.2s linear;
	transition: 0.2s linear;
}
.socials-list__item:not(:last-child) {
	margin-right: 20px;
}
.socials-list__item:hover {
	opacity: 0.8;
}
.socials-list__link {
	-webkit-transform: translateY(2px);
	-ms-transform: translateY(2px);
	transform: translateY(2px);
}
.brands__heading-img img,
.brands__logos img,
.card__img img,
.socials-list__link img {
	width: 100%;
}
.nav {
	position: relative;
	-webkit-transition: background-color 0.1s linear;
	-o-transition: background-color 0.1s linear;
	transition: background-color 0.1s linear;
	z-index: 20;
	padding: 40px 0;
}
.nav__container {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.nav__menu {
	margin: 0 10px;
}
.nav__input {
	max-width: 200px;
	min-width: 120px;
	margin-right: 10px;
}
.nav__btn {
	padding: 12px 21px;
}
.nav .logo svg path {
	-webkit-transition: fill 0.2s linear;
	-o-transition: fill 0.2s linear;
	transition: fill 0.2s linear;
}
.menu {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.menu__item {
	position: relative;
}
.menu__item:not(:last-child) {
	margin-right: 40px;
}
.menu__item::after {
	background: #7abc51;
	position: absolute;
	content: "";
	width: 80%;
	height: 2px;
	bottom: -5px;
	left: 50%;
	-webkit-transform: translateX(-50%) translateY(-5px);
	-ms-transform: translateX(-50%) translateY(-5px);
	transform: translateX(-50%) translateY(-5px);
	opacity: 0;
	-webkit-transition: opacity 0.2s linear, width 0.2s linear, -webkit-transform 0.2s linear;
	-o-transition: transform 0.2s linear, opacity 0.2s linear, width 0.2s linear;
	transition: transform 0.2s linear, opacity 0.2s linear, width 0.2s linear;
	transition: transform 0.2s linear, opacity 0.2s linear, width 0.2s linear, -webkit-transform 0.2s linear;
	border-radius: 20px;
}
.menu__item--active::after,
.menu__item:hover::after {
	width: 100%;
	opacity: 1;
	-webkit-transform: translateX(-50%) translateY(0);
	-ms-transform: translateX(-50%) translateY(0);
	transform: translateX(-50%) translateY(0);
}
.menu__link {
	font: 600 15px "Montserrat";
}
.nav.hamburger-active {
	background: #7abc51;
	-webkit-box-shadow: 0 6px 14px rgba(0, 0, 0, 0.1);
	box-shadow: 0 6px 14px rgba(0, 0, 0, 0.1);
}
.nav.hamburger-active .logo svg path {
	fill: #fff;
}
.nav.hamburger-active .menu {
	opacity: 1;
	pointer-events: all;
}
.nav.hamburger-active .hamburger {
	-webkit-transform: translateY(5px);
	-ms-transform: translateY(5px);
	transform: translateY(5px);
}
.nav.hamburger-active .hamburger span {
	background: #fff;
}
.nav.hamburger-active .hamburger span:nth-child(1) {
	-webkit-transform: translate(4px, -11px) rotate(45deg);
	-ms-transform: translate(4px, -11px) rotate(45deg);
	transform: translate(4px, -11px) rotate(45deg);
	-webkit-transform-origin: left top;
	-ms-transform-origin: left top;
	transform-origin: left top;
}
.nav.hamburger-active .hamburger span:nth-child(2) {
	-webkit-transform: scale(0);
	-ms-transform: scale(0);
	transform: scale(0);
}
.nav.hamburger-active .hamburger span:nth-child(3) {
	-webkit-transform: translate(-5px, -24px) rotate(-45deg);
	-ms-transform: translate(-5px, -24px) rotate(-45deg);
	transform: translate(-5px, -24px) rotate(-45deg);
	-webkit-transform-origin: right bottom;
	-ms-transform-origin: right bottom;
	transform-origin: right bottom;
}
.hamburger {
	-webkit-box-ordinal-group: 3;
	-ms-flex-order: 2;
	order: 2;
	width: 30px;
	height: 35px;
	display: none;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	cursor: pointer;
	-webkit-transition: -webkit-transform 0.2s linear;
	-o-transition: transform 0.2s linear;
	transition: transform 0.2s linear;
	transition: transform 0.2s linear, -webkit-transform 0.2s linear;
}
.hamburger span {
	background: #7abc51;
	display: block;
	width: 100%;
	height: 2px;
	-webkit-transition: all 0.2s;
	-o-transition: all 0.2s;
	transition: all 0.2s;
}
.hamburger span:not(:last-child) {
	margin-bottom: 4px;
}
.popup-menu-wrapp {
	background: #fff;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	position: absolute;
	width: 100%;
	height: calc(100% - 140px);
	z-index: 30;
	top: 140px;
	opacity: 0;
	pointer-events: none;
	-webkit-transform: translateY(-50px);
	-ms-transform: translateY(-50px);
	transform: translateY(-50px);
	-webkit-transition: opacity, 0.2s linear, -webkit-transform 0.2s linear;
	-o-transition: transform 0.2s linear, opacity, 0.2s linear;
	transition: transform 0.2s linear, opacity, 0.2s linear;
	transition: transform 0.2s linear, opacity, 0.2s linear, -webkit-transform 0.2s linear;
}
.popup-menu-wrapp--active {
	-webkit-transform: translateY(0);
	-ms-transform: translateY(0);
	transform: translateY(0);
	pointer-events: all;
	opacity: 1;
}
.popup-menu-wrapp .popup-menu__link {
	font: 700 16px "Montserrat";
	display: inline-block;
	width: 100%;
	text-align: center;
	padding: 40px 0;
	border-bottom: 1px solid #d2d2d2;
	-webkit-transition: 0.2s linear;
	-o-transition: 0.2s linear;
	transition: 0.2s linear;
}
.popup-menu-wrapp .popup-menu__link--active {
	background: #7abc51;
	border-bottom-color: #7abc51;
	color: #fff;
}
.popup-menu-wrapp .popup-menu__link:hover {
	background: #7abc51;
}
.popup-menu-wrapp .socials-list {
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	margin-bottom: 40px;
}
.popup-menu-wrapp .socials-list__link img {
	width: 35px;
}
.search-form {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.search-form__input {
	font: 500 17px "Montserrat";
	background: url(../img/search.svg) no-repeat 20px center #fff;
	width: 100%;
	padding: 12px 12px 12px 55px;
}
.search-form__input::-webkit-input-placeholder {
	font: inherit inherit inherit;
	color: #c9c9c9;
}
.search-form__input::-moz-placeholder {
	font: inherit inherit inherit;
	color: #c9c9c9;
}
.search-form__input:-ms-input-placeholder {
	font: inherit inherit inherit;
	color: #c9c9c9;
}
.search-form__input::-ms-input-placeholder {
	font: inherit inherit inherit;
	color: #c9c9c9;
}
.search-form__input::placeholder {
	font: inherit inherit inherit;
	color: #c9c9c9;
}
.search-form__btn {
	font: 600 15px "Montserrat-alternates";
	background: #7abc51;
	border-radius: 10px;
	color: #fff;
	-webkit-box-shadow: 2px 2px 25px rgba(22, 62, 8, 0.2);
	box-shadow: 2px 2px 25px rgba(22, 62, 8, 0.2);
}
.header {
	background: #fff;
	position: relative;
	overflow: hidden;
	-webkit-box-shadow: inset 0 -5px 25px rgba(0, 0, 0, 0.2);
	box-shadow: inset 0 -5px 25px rgba(0, 0, 0, 0.2);
}
.header__nav {
	padding-bottom: 118px;
}
.header__container {
	display: grid;
	grid-template-columns: 45% 55%;
}
.header__bg-image {
	display: block;
	top: 0;
	right: 0;
	width: 50%;
	height: 100%;
	position: absolute;
	z-index: 0;
}
.header__bg-image-circle {
	display: none;
	top: 180px;
	width: 50%;
	position: absolute;
	z-index: 0;
}
.header__title {
	font: 700 52px "Montserrat-alternates";
	max-width: 520px;
	margin-bottom: 50px;
	color: #000;
}
.header__btn {
	font: 700 20px "Montserrat-alternates";
	-webkit-box-ordinal-group: 4;
	-ms-flex-order: 3;
	order: 3;
	display: inline-block;
	background: #7abc51;
	padding: 13px 30px;
	margin-bottom: 50px;
	color: #fff;
	-webkit-box-shadow: 4px 10px 15px rgba(92, 209, 51, 0.15);
	box-shadow: 4px 10px 15px rgba(92, 209, 51, 0.15);
	border-radius: 10px;
}
.header__list {
	-webkit-box-ordinal-group: 2;
	-ms-flex-order: 1;
	order: 1;
	padding-bottom: 40px;
}
.header__item {
	background: url(../img/check.svg) no-repeat left center;
	font-weight: 500;
	font-size: 17px;
	padding-left: 36px;
}
.header__item:not(:last-child) {
	margin-bottom: 20px;
}
.header__bg-vit {
	position: relative;
	z-index: 10;
	max-width: 750px;
	width: 100%;
}
.brands {
	padding: 80px 0;
}
.brands__container {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.brands__title {
	margin-bottom: 20px;
	font-weight: 600;
	font-size: 56px;
	color: #000;
}
.brands__descr,
.purpose__info p {
	font-weight: 500;
	text-align: center;
}
.brands__descr {
	margin-bottom: 12px;
	max-width: 367px;
	font-size: 17px;
	color: rgba(0, 0, 0, 0.7);
}
.brands__heading-img {
	margin-bottom: 75px;
}
.brands__logos {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.brands__item {
	max-width: 167px;
}
.products {
	padding: 80px 0;
}
.products__title {
	margin-bottom: 142px;
}
.products__content {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	gap: 82px 10px;
}
.products__btn {
	margin-top: 40px;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
}
.products__more {
	background: #7abc51;
	color: #fff;
	font-weight: 700;
	font-size: 20px;
	padding: 12px 30px;
	border-radius: 10px;
	-webkit-box-shadow: 4px 10px 15px rgba(92, 209, 51, 0.15);
	box-shadow: 4px 10px 15px rgba(92, 209, 51, 0.15);
}
.card,
.card__img {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.card {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	background: #fff;
	-webkit-box-shadow: 2px 5px 14px rgba(0, 0, 0, 0.25);
	box-shadow: 2px 5px 14px rgba(0, 0, 0, 0.25);
	border-radius: 20px;
	padding: 0 20px 20px;
}
.card__img {
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	height: 280px;
	margin: -62px auto 10px;
}
.card__title {
	font-weight: 600;
	font-size: 28px;
	color: #000;
	margin-bottom: 15px;
}
.card__descr,
.card__more {
	font-weight: 400;
	font-size: 17px;
	color: #000;
}
.card__more {
	display: block;
	padding-top: 5px;
	font-weight: 600;
	text-decoration-line: underline;
	color: #d2d2d2;
}
.card__func {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: end;
	-ms-flex-align: end;
	align-items: flex-end;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.card__button-buy {
	font-weight: 600;
	font-size: 15px;
	padding: 12px 55px;
	background: #7abc51;
	color: #fff;
	-webkit-box-shadow: 2px 2px 25px rgba(22, 62, 8, 0.2);
	box-shadow: 2px 2px 25px rgba(22, 62, 8, 0.2);
	border-radius: 10px;
}
.card__price {
	font-weight: 700;
	font-size: 32px;
	margin-bottom: 16px;
}
.card__changed-price {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.card__changed-thing {
	font-weight: 500;
	font-size: 32px;
}
.card__changed-btn {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	height: 22px;
	width: 22px;
	color: #7abc51;
	border: 1.5px solid #7abc51;
	border-radius: 5px;
}
.card__changed-btn--max {
	cursor: default;
	border-color: #9ab08c;
}
.card__changed-btn--max svg path,
.popup .card__changed-btn--max svg path,
.popup-cart__btn--max svg path {
	stroke: #9ab08c;
}
.card__changed-btn--next {
	-webkit-transform: translateY(1px) translateX(1px);
	-ms-transform: translateY(1px) translateX(1px);
	transform: translateY(1px) translateX(1px);
}
.purpose {
	padding: 80px 0;
}
.purpose__title {
	margin-bottom: 80px;
}
.purpose__content {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	gap: 10px;
}
.purpose__img,
.purpose__info {
	width: 50%;
}
.purpose__info p {
	max-width: 540px;
	font-size: 20px;
	color: #000;
	margin-bottom: 30px;
}
.purpose__info p span {
	color: #7abc51;
}
.purpose__img img {
	max-width: 500%;
	width: 100%;
}
.advantages {
	background: #7abc51;
	padding: 80px 20px;
}
.advantages__container {
	margin: 0 auto;
	max-width: 804px;
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 30px;
}
.advantages__title {
	color: #fff;
	margin-bottom: 80px;
}
.advantages__blocks {
	background: #fff;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	padding: 35px 10px;
	border-radius: 20px;
}
.advantages__heading {
	font-weight: 700;
	font-size: 48px;
	color: #7abc51;
	margin-bottom: 16px;
}
.advantages__descr {
	text-align: center;
	font-weight: 700;
	font-size: 20px;
	max-width: 268px;
}
.reviews {
	padding: 80px 0;
	position: relative;
}
.reviews__title {
	margin-bottom: 80px;
}
.reviews__slider {
	position: relative;
}
.reviews__wrapper {
	padding-bottom: 80px;
}
.reviews__slider-item {
	max-width: 751px;
	text-align: center;
	margin: 0 auto;
}
.reviews__text {
	font-weight: 400;
	font-size: 20px;
	margin-bottom: 40px;
}
.reviews__name {
	font-weight: 700;
	font-size: 24px;
	margin-bottom: 5px;
}
.reviews__date {
	font-weight: 400;
	font-size: 17px;
}
.reviews .swiper-pagination {
	bottom: 0;
}
.reviews .swiper-pagination span {
	background: #f0f0f0;
	width: 10px;
	height: 10px;
	border-radius: 15px;
	opacity: 1;
	-webkit-transition: width 0.2s linear, background-color 0.2s linear;
	-o-transition: width 0.2s linear, background-color 0.2s linear;
	transition: width 0.2s linear, background-color 0.2s linear;
}
.reviews .swiper-pagination .swiper-pagination-bullet-active {
	background: #7abc51;
	width: 40px;
}
.footer {
	background: #7abc51;
	padding: 55px 0;
}
.footer__container {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.footer__copyright {
	font-weight: 500;
	font-size: 20px;
	color: #fff;
}
.product-search-form {
	margin-bottom: 30px;
}
.product-search-form form {
	gap: 10px;
}
.product-search-form__input {
	padding-top: 19px;
	padding-bottom: 19px;
	width: 76%;
}
.product-search-form__btn {
	width: 24%;
}
.table {
	padding-bottom: 80px;
}
.table__nav {
	margin-bottom: 100px;
}
.table__menu {
	position: relative;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding-bottom: 10px;
	margin-bottom: 40px;
}
.table__menu::after {
	background: #7abc51;
	content: "";
	position: absolute;
	bottom: 0;
	left: 0;
	height: 2px;
	width: 100%;
	border-radius: 4px;
}
.table__filter-top-menu {
	width: 100%;
	-webkit-transform: translateX(10px);
	-ms-transform: translateX(10px);
	transform: translateX(10px);
}
.table__filter-top-menu .swiper-slide {
	padding: 20px 10px;
}
.table__filter-top-menu .swiper-slide:last-child {
	padding-right: 20px;
}
.table__item {
	width: 100%;
}
.table__btn {
	display: inline-block;
	width: 100%;
	padding: 30px 10px;
	border: 2px solid #7abc51;
	border-radius: 20px;
	-webkit-box-shadow: 5px 7px 25px rgba(0, 0, 0, 0.2);
	box-shadow: 5px 7px 25px rgba(0, 0, 0, 0.2);
	font-weight: 600;
	font-size: 24px;
	-webkit-transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;
	-o-transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;
	transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;
	text-align: center;
}
.table__btn:hover {
	background: #7abc51;
	color: #fff;
}
.table__btn:active {
	-webkit-transform: scale(0.95);
	-ms-transform: scale(0.95);
	transform: scale(0.95);
}
.table__filter {
	padding: 0 40px;
}
.table__col {
	display: grid;
	grid-template-columns: 20% 1fr;
	padding-bottom: 10px;
}
.table__col:first-child {
	margin-bottom: 40px;
}
.table__col span {
	display: inline-block;
	font-weight: 600;
	font-size: 20px;
	color: #838383;
	margin-right: 40px;
}
.table__filter-icon,
.table__filter-menu {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.table__filter-menu {
	max-width: 922px;
	width: 100%;
	margin-left: auto;
	padding-bottom: 11px;
	border-bottom: 1px solid #d2d2d2;
}
.table__filter-icon {
	position: relative;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	width: 40px;
	height: 40px;
	border: 2px solid #7abc51;
	-webkit-box-shadow: 2px 4px 20px rgba(0, 0, 0, 0.1);
	box-shadow: 2px 4px 20px rgba(0, 0, 0, 0.1);
	border-radius: 8px;
	z-index: 11;
}
.table__filter-icon img {
	-webkit-transform: translateY(1px);
	-ms-transform: translateY(1px);
	transform: translateY(1px);
}
.table__filter-icon--hidden {
	display: none;
}
.table__filter-item:not(:last-child) {
	margin-right: 80px;
}
.table__filter-btn {
	position: relative;
	font-weight: 600;
	font-size: 20px;
}
.table__filter-btn--active::after {
	background: #7abc51;
	content: "";
	position: absolute;
	bottom: -11px;
	width: 100%;
	left: 0;
	height: 2px;
}
.table__content {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	gap: 82px 10px;
}
.viewers {
	padding-bottom: 80px;
}
.viewers__heading {
	margin-bottom: 70px;
}
.viewers__title {
	font-weight: 700;
	font-size: 36px;
	color: #7abc51;
	margin-bottom: 20px;
}
.viewers__descr {
	max-width: 720px;
	font-weight: 500;
	font-size: 17px;
}
.viewers__content {
	margin-bottom: 60px;
}
.viewers__more {
	padding: 20px;
}
.view,
.viewers__btn {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.viewers__btn {
	margin: 0 auto;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	width: 150px;
	height: 150px;
	border: 5px solid #7abc51;
	border-radius: 100%;
	-webkit-box-shadow: 2px 4px 50px rgba(0, 0, 0, 0.1);
	box-shadow: 2px 4px 50px rgba(0, 0, 0, 0.1);
}
.viewers__btn:active {
	-webkit-transform: scale(0.99);
	-ms-transform: scale(0.99);
	transform: scale(0.99);
}
.view {
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	padding: 30px 40px;
	background: #fff;
	-webkit-box-shadow: 3px 6px 20px rgba(0, 0, 0, 0.1);
	box-shadow: 3px 6px 20px rgba(0, 0, 0, 0.1);
	border-radius: 20px;
	margin-bottom: 20px;
}
.view__info {
	max-width: 750px;
	padding-right: 20px;
}
.view__heading {
	margin-bottom: 20px;
}
.view__name {
	font-weight: 700;
	font-size: 24px;
	color: #7abc51;
	margin-bottom: 5px;
}
.view__date {
	font-weight: 400;
	font-size: 17px;
	color: #d2d2d2;
}
.view__text {
	font-weight: 400;
	font-size: 20px;
}
.delivery {
	padding-bottom: 40px;
}
.delivery__container {
	display: grid;
	grid-template-columns: 1fr 40%;
}
.delivery__info {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.delivery__text,
.delivery__title {
	font-weight: 700;
	font-size: 36px;
	margin-bottom: 50px;
}
.delivery__text {
	font-weight: 500;
	font-size: 20px;
}
.delivery__text p:first-child {
	margin-bottom: 30px;
}
.delivery__text span {
	font-weight: 700;
}
.delivery__btn-link {
	display: inline-block;
	max-width: 258px;
	margin-top: auto;
	padding: 15px 40px;
	font-size: 15px;
	font-weight: 600;
	color: #fff;
	background: #7abc51;
	border-radius: 10px;
	-webkit-box-shadow: 2px 2px 25px rgba(0, 0, 0, 0.2);
	box-shadow: 2px 2px 25px rgba(0, 0, 0, 0.2);
}
.delivery__img img {
	width: 100%;
	min-width: 300px;
}
.contacts {
	padding: 60px 0;
}
.contacts__title {
	font-weight: 700;
	font-size: 36px;
	margin-bottom: 40px;
}
.contacts__text {
	font-weight: 500;
	font-size: 20px;
	margin-bottom: 10px;
}
.contacts__num {
	padding: 10px 0;
	display: block;
	font-weight: 700;
	font-size: 20px;
	color: #7abc51;
}
.cart-icon,
.cart-icon__elements {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.cart-icon {
	background: #fff;
	position: fixed;
	right: 5%;
	bottom: 400px;
	height: 100px;
	width: 100px;
	-webkit-box-shadow: 3px 5px 10px rgba(0, 0, 0, 0.2);
	box-shadow: 3px 5px 10px rgba(0, 0, 0, 0.2);
	border-radius: 20px;
	z-index: 20;
}
.cart-icon__elements {
	background: #ff543e;
	position: absolute;
	height: 22px;
	width: 22px;
	right: 17px;
	top: 25px;
	font-weight: 600;
	font-size: 16px;
	color: #fff;
	border-radius: 100%;
}
.cart-icon__elements span {
	-webkit-transform: translateY(1px);
	-ms-transform: translateY(1px);
	transform: translateY(1px);
}
.popup,
.popup__body {
	height: 100%;
	width: 100%;
}
.popup {
	position: fixed;
	left: 0;
	top: 0;
	opacity: 1;
	z-index: 20;
	pointer-events: all;
	-webkit-transition: opacity 0.2s linear;
	-o-transition: opacity 0.2s linear;
	transition: opacity 0.2s linear;
}
.popup__body {
	background: rgba(0, 0, 0, 0.5);
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding: 20px;
}
.popup--hidden {
	opacity: 0;
	pointer-events: none;
}
.popup__content {
	background: #fff;
	position: relative;
	z-index: 30;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	max-width: 1214px;
	margin: 0 auto;
	padding: 70px 86px;
	-webkit-box-shadow: 2px 5px 14px rgba(0, 0, 0, 0.25);
	box-shadow: 2px 5px 14px rgba(0, 0, 0, 0.25);
	border-radius: 20px;
}
.popup__close {
	position: absolute;
	right: 86px;
	top: 70px;
}
.popup__title {
	font-weight: 600;
	font-size: 36px;
	color: #7abc51;
	margin-bottom: 20px;
	padding-right: 30px;
}
.popup__text {
	font-weight: 400;
	font-size: 17px;
	margin-bottom: 40px;
}
.popup .changed-price,
.popup__func {
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.popup .changed-price,
.popup__func,
.popup__func-left {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.popup__btn {
	padding: 0 28px;
	height: 44px;
	background: #7abc51;
	-webkit-box-shadow: 2px 2px 15px rgba(92, 209, 51, 0.2);
	box-shadow: 2px 2px 15px rgba(92, 209, 51, 0.2);
	border-radius: 10px;
	font-weight: 700;
	font-size: 17px;
	text-transform: uppercase;
	color: #fff;
	margin-right: 42px;
}
.popup__price {
	margin-left: auto;
	font-weight: 700;
	font-size: 32px;
}
.popup .card__changed-thing {
	padding: 0 22px;
	font-weight: 500;
	font-size: 32px;
}
.popup .card__changed-btn {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	height: 22px;
	width: 22px;
	color: #7abc51;
	border: 1.5px solid #7abc51;
	border-radius: 5px;
}
.popup .card__changed-btn--max {
	cursor: default;
	border-color: #9ab08c;
}
.popup .card__changed-btn--next svg {
	-webkit-transform: translateX(1px);
	-ms-transform: translateX(1px);
	transform: translateX(1px);
}
.popup-cart {
	position: fixed;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	opacity: 1;
	z-index: 20;
	pointer-events: all;
	-webkit-transition: opacity 0.2s linear;
	-o-transition: opacity 0.2s linear;
	transition: opacity 0.2s linear;
}
.popup-cart--hidden {
	opacity: 0;
	pointer-events: none;
}
.popup-cart__body {
	background: rgba(0, 0, 0, 0.5);
	padding: 20px;
	height: 100%;
	width: 100%;
}
.popup-cart__close {
	max-height: 30px;
}
.popup-cart__content {
	background: #fff;
	position: relative;
	max-width: 1000px;
	height: 100%;
	margin: 0 auto;
	padding: 40px 50px;
	border-radius: 20px;
}
.popup-cart__heading {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.popup-cart__title {
	font-weight: 700;
	font-size: 36px;
	color: #7abc51;
	margin-bottom: 50px;
}
.popup-cart__blocks {
	height: 80%;
	overflow-y: auto;
	padding: 10px 10px 200px;
}
.popup-cart__blocks::-webkit-scrollbar {
	background: #d2d2d2;
	width: 4px;
}
.popup-cart__blocks::-webkit-scrollbar-thumb {
	background: #7abc51;
	border-radius: 10px;
}
.popup-cart__card {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding: 20px 30px;
	-webkit-box-shadow: 2px 4px 15px rgba(0, 0, 0, 0.1);
	box-shadow: 2px 4px 15px rgba(0, 0, 0, 0.1);
	border-radius: 10px;
	margin-bottom: 10px;
}
.popup-cart__img {
	width: 80px;
	margin-right: 40px;
}
.popup-cart__img img {
	min-width: 72px;
	-o-object-fit: cover;
	object-fit: cover;
	width: 100%;
}
.popup-cart__card-title {
	font-weight: 600;
	font-size: 24px;
	margin-bottom: 23px;
}
.popup-cart__btn,
.popup-cart__change-thing {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.popup-cart__btn {
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	width: 16px;
	height: 16px;
	padding: 5px;
	border: 1px solid #7abc51;
	border-radius: 3px;
}
.popup-cart__btn svg {
	-webkit-transform: scale(2);
	-ms-transform: scale(2);
	transform: scale(2);
}
.popup-cart__btn--max {
	cursor: default;
	border-color: #9ab08c;
}
.popup-cart__thing {
	font-weight: 600;
	font-size: 20px;
	padding: 0 12px;
}
.popup-cart__price {
	font-weight: 700;
	font-size: 28px;
}
.popup-cart__bottom {
	position: relative;
	padding: 20px 0;
}
.popup-cart__bottom::before {
	background: url(../img/shadow-cart.png);
	content: "";
	position: absolute;
	top: -200px;
	left: 0;
	width: 100%;
	height: 200px;
	z-index: 10;
}
.popup-cart__buy-btn {
	font: 600 20px "Montserrat-alternates";
	background: #7abc51;
	color: #fff;
	padding: 14px 80px 14px 70px;
	border-radius: 10px;
}
.popup-cart__text {
	position: absolute;
	top: 50%;
	left: 50%;
	-webkit-transform: translate(-50%, -50%);
	-ms-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	font-weight: 500;
	font-size: 24px;
	color: #d2d2d2;
}
.popup-cart__text--hidden {
	display: none;
}
.popup-info {
	position: fixed;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	opacity: 1;
	z-index: 20;
	pointer-events: all;
	-webkit-transition: opacity 0.2s linear;
	-o-transition: opacity 0.2s linear;
	transition: opacity 0.2s linear;
}
.popup-info--hidden {
	opacity: 0;
	pointer-events: none;
}
.popup-info__body {
	background: rgba(0, 0, 0, 0.5);
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding: 20px;
	height: 100%;
	width: 100%;
}
.popup-info__close {
	height: 24px;
}
.popup-info__content {
	background: #fff;
	max-width: 800px;
	width: 100%;
	height: 800px;
	margin: 0 auto;
	padding: 40px 50px;
	border-radius: 20px;
}
.popup-info__heading {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.popup-info__title {
	font-weight: 700;
	font-size: 36px;
	color: #7abc51;
	margin-bottom: 50px;
}
.popup-info__fields {
	height: 80%;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-webkit-box-align: start;
	-ms-flex-align: start;
	align-items: flex-start;
}
.popup-info__top {
	width: 100%;
}
.popup-info__field {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	margin-bottom: 25px;
}
.popup-info__field--small {
	width: 50%;
}
.popup-info__field label {
	font-weight: 600;
	font-size: 17px;
	margin-bottom: 10px;
}
.popup-info__field input {
	border: 1px solid #7abc51;
	border-radius: 10px;
	padding: 14px 20px;
	outline: 0;
}
.popup-info__field input::-webkit-input-placeholder {
	font: 600 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-info__field input::-moz-placeholder {
	font: 600 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-info__field input:-ms-input-placeholder {
	font: 600 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-info__field input::-ms-input-placeholder {
	font: 600 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-info__field input::placeholder {
	font: 600 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-info__btn {
	background: #7abc51;
	font-weight: 600;
	font-size: 20px;
	color: #fff;
	padding: 14px 80px;
	border-radius: 10px;
}
.popup-viewers {
	position: fixed;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	opacity: 1;
	z-index: 20;
	pointer-events: all;
	-webkit-transition: opacity 0.2s linear;
	-o-transition: opacity 0.2s linear;
	transition: opacity 0.2s linear;
}
.popup-viewers--hidden {
	opacity: 0;
	pointer-events: none;
}
.popup-viewers__body {
	background: rgba(0, 0, 0, 0.5);
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding: 20px;
	height: 100%;
	width: 100%;
}
.popup-viewers__content {
	background: #fff;
	position: relative;
	max-width: 800px;
	width: 100%;
	height: 600px;
	margin: 0 auto;
	padding: 40px 50px;
	border-radius: 20px;
	overflow: hidden;
}
.popup-viewers .radio,
.popup-viewers__heading {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.popup-viewers__heading {
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.popup-viewers__title {
	font-weight: 700;
	font-size: 36px;
	color: #7abc51;
	margin-bottom: 30px;
}
.popup-viewers__close {
	height: 24px;
	-webkit-transform: translateY(-5px);
	-ms-transform: translateY(-5px);
	transform: translateY(-5px);
}
.popup-viewers .radio {
	margin: 0.5rem;
}
.popup-viewers .radio input[type="radio"] {
	position: absolute;
	opacity: 0;
}
.popup-viewers .radio input[type="radio"] + .radio-label:before {
	content: "";
	background: #f4f4f4;
	border-radius: 100%;
	border: 1px solid #b4b4b4;
	display: inline-block;
	width: 1.4em;
	height: 1.4em;
	position: relative;
	top: -0.2em;
	margin-right: 1em;
	vertical-align: top;
	cursor: pointer;
	text-align: center;
	-webkit-transition: all 250ms ease;
	-o-transition: all 250ms ease;
	transition: all 250ms ease;
}
.popup-viewers .radio input[type="radio"]:checked + .radio-label:before {
	background: #7abc51;
	-webkit-box-shadow: inset 0 0 0 4px #f4f4f4;
	box-shadow: inset 0 0 0 4px #f4f4f4;
}
.popup-viewers .radio input[type="radio"]:focus + .radio-label:before {
	outline: 0;
	border-color: #7abc51;
}
.popup-viewers .radio input[type="radio"]:disabled + .radio-label:before {
	-webkit-box-shadow: inset 0 0 0 4px #f4f4f4;
	box-shadow: inset 0 0 0 4px #f4f4f4;
	border-color: #b4b4b4;
	background: #b4b4b4;
}
.popup-viewers .radio input[type="radio"] + .radio-label:empty:before {
	margin-right: 0;
}
.popup-viewers__field,
.popup-viewers__radios {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}
.popup-viewers__radios {
	margin-bottom: 20px;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}
.popup-viewers__radios label {
	font: 17px "Montserrat-alternates";
}
.popup-viewers__field {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	margin-bottom: 25px;
}
.popup-viewers__field label {
	font-weight: 600;
	font-size: 17px;
	margin-bottom: 10px;
}
.popup-viewers__field input {
	font: 400 17px "Montserrat-alternates";
	border: 1px solid #7abc51;
	border-radius: 10px;
	padding: 14px 20px;
	outline: 0;
	max-width: 350px;
}
.popup-viewers__field input::-webkit-input-placeholder,
.popup-viewers__field textarea::-webkit-input-placeholder {
	font: 400 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-viewers__field input::-moz-placeholder,
.popup-viewers__field textarea::-moz-placeholder {
	font: 400 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-viewers__field input:-ms-input-placeholder,
.popup-viewers__field textarea:-ms-input-placeholder {
	font: 400 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-viewers__field input::-ms-input-placeholder,
.popup-viewers__field textarea::-ms-input-placeholder {
	font: 400 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-viewers__field input::placeholder,
.popup-viewers__field textarea::placeholder {
	font: 400 17px "Montserrat-alternates";
	color: #d2d2d2;
}
.popup-viewers__field textarea {
	font: 400 17px "Montserrat-alternates";
	padding: 16px 20px;
	border: 1px solid #7abc51;
	border-radius: 10px;
	outline: 0;
	resize: none;
	height: 183px;
}
.popup-viewers__btn {
	font: 600 20px "Montserrat-alternates";
	background: #7abc51;
	color: #fff;
	padding: 9px 80px;
	border-radius: 10px;
}
.popup-viewers__successful {
	background: #fff;
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	text-align: center;
	opacity: 1;
	pointer-events: all;
}
.popup-viewers__successful--hidden {
	opacity: 0;
	pointer-events: none;
}
.popup-viewers__successful-img {
	width: 100%;
}
.popup-viewers__successful-title {
	font-weight: 700;
	font-size: 36px;
	margin-bottom: 20px;
}
.popup-viewers__successful-descr {
	font-weight: 500;
	font-size: 17px;
	color: #a5a5a5;
}
@supports (-webkit-appearance: none) {
	.search-form__input {
		background-image: url(../img/search.svg);
	}
	.header__item {
		background-image: url(../img/check.svg);
	}
	.popup-cart__bottom::before {
		background-image: url(../img/shadow-cart.webp);
	}
}
@media (max-width: 1250px) {
	.products__content,
	.table__content {
		grid-template-columns: 1fr 1fr;
		gap: 82px 20px;
	}
}
@media (max-width: 1010px) {
	.title {
		font-size: 48px;
	}
	.nav .nav__container {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
		justify-content: space-between;
	}
	.nav .nav__btn,
	.nav .nav__input {
		display: none;
	}
	.menu {
		margin-left: auto;
	}
	.header__title {
		font-size: 36px;
	}
	.header .header__btn {
		font-size: 17px;
	}
	.products {
		padding: 40px 0;
	}
	.card__more {
		margin-bottom: 47px;
	}
	.card__func {
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
	}
	.card__price {
		margin-bottom: 0;
	}
	.card__changed-price--card {
		display: none;
	}
	.purpose {
		padding: 40px 0;
	}
	.advantages {
		padding: 40px 20px;
	}
	.reviews {
		padding: 40px 0;
	}
	.table__filter {
		padding: 0;
	}
	.table__filter-item:not(:last-child) {
		margin-right: 52px;
	}
	.table__filter-btn {
		font-size: 17px;
	}
	.table__filter-btn--active::after {
		bottom: -12px;
	}
	.table__filter-btn--active-1::after {
		bottom: -12px !important;
	}
	.viewers__title {
		font-size: 32px;
	}
	.delivery__title {
		margin-bottom: 30px;
		font-size: 32px;
	}
	.delivery__text {
		font-size: 17px;
		margin-bottom: 24px;
	}
	.contacts__title {
		margin-bottom: 30px;
		font-size: 32px;
	}
	.contacts__text {
		font-size: 17px;
		margin-bottom: 24px;
	}
	.popup__content {
		padding: 60px 30px;
	}
	.popup__close {
		right: 30px;
		top: 20px;
	}
}
@media (max-width: 840px) {
	.popup__func {
		-webkit-box-align: start;
		-ms-flex-align: start;
		align-items: flex-start;
	}
	.popup__func-left {
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
	}
	.popup__btn {
		margin-top: 40px;
		margin-right: 0;
	}
	.popup .card__changed-price {
		-webkit-box-pack: unset;
		-ms-flex-pack: unset;
		justify-content: unset;
	}
}
@media (max-width: 810px) {
	.products__content,
	.table__content {
		grid-template-columns: 1fr;
	}
}
@media (max-width: 768px) {
	.title {
		font-size: 44px;
	}
	.scroll-up.show-scroll {
		right: 80px;
	}
	.purpose__info p,
	.subheader__text {
		font-size: 17px;
	}
	.socials-list__item {
		height: 28px;
		width: 28px;
	}
	.nav {
		padding: 36px 0 40px;
	}
	.nav .logo svg {
		width: 120px;
		height: 30px;
	}
	.menu__item:not(:last-child),
	.table__filter-item:not(:last-child) {
		margin-right: 30px;
	}
	.menu__link {
		font-size: 13px;
	}
	.header__container {
		grid-template-columns: 55% 45%;
	}
	.header__bg-image {
		padding-top: 54px;
	}
	.header__btn,
	.header__title {
		font-size: 28px;
		margin-bottom: 40px;
	}
	.header__btn {
		max-width: 251px;
		font-size: 12px;
		padding: 13px 10px;
	}
	.header__item {
		font-size: 15px;
	}
	.header__bg-vit {
		height: 308px;
		width: 433px;
		left: -120px;
		top: 40px;
	}
	.brands {
		padding: 40px 0;
	}
	.brands__descr {
		font-size: 15px;
	}
	.brands__heading-img {
		max-width: 270px;
		margin-bottom: 50px;
	}
	.products {
		padding: 30px 0;
	}
	.products__title {
		margin-bottom: 100px;
	}
	.card__img {
		max-width: 270px;
		max-height: 274px;
	}
	.card__img,
	.card__more {
		margin-bottom: 30px;
	}
	.card__button-buy {
		padding: 15px 37px;
	}
	.footer__logo {
		max-width: 120px;
	}
	.footer__logo img {
		width: 100%;
	}
	.footer__copyright {
		font-size: 17px;
	}
	.table__btn {
		font-size: 20px;
	}
	.table__col span,
	.table__filter-btn {
		font-size: 14px;
	}
	.table__filter-btn--active::after {
		bottom: -13px;
	}
	.viewers__content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
	}
	.viewers__descr {
		font-size: 15px;
	}
	.view {
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
		text-align: center;
	}
	.view__img {
		margin-bottom: 30px;
	}
	.view__info {
		padding-right: 0;
	}
	.delivery__container {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
		text-align: center;
	}
	.delivery__title {
		font-size: 28px;
		margin-bottom: 24px;
	}
	.delivery__text {
		font-size: 16px;
		max-width: 80%;
		margin: 0 auto 40px;
	}
	.delivery__btn-link {
		margin: 0 auto;
	}
	.contacts__container {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
		text-align: center;
	}
	.contacts__title {
		font-size: 28px;
		margin-bottom: 24px;
	}
	.contacts__text {
		font-size: 16px;
		max-width: 80%;
		margin: 0 auto 24px;
	}
	.contacts__num {
		font-size: 17px;
	}
	.cart-icon {
		height: 80px;
		width: 80px;
	}
	.cart-icon__elements {
		right: 12px;
		top: 17px;
	}
	.popup__content {
		-webkit-box-align: unset;
		-ms-flex-align: unset;
		align-items: unset;
	}
	.popup__title {
		font-size: 28px;
		padding-right: 0;
		margin-bottom: 30px;
	}
	.popup__text {
		font-size: 17px;
	}
	.popup-cart__card-title {
		font-size: 20px;
	}
	.popup-cart__price {
		font-size: 24px;
	}
	.popup-cart__text {
		text-align: center;
		font-size: 17px;
	}
	.popup-info__content {
		padding: 20px;
	}
	.popup-info__fields {
		-webkit-box-align: unset;
		-ms-flex-align: unset;
		align-items: unset;
	}
}
@media (max-width: 740px) {
	.popup-cart__info {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-ms-flex-wrap: wrap;
		flex-wrap: wrap;
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
		justify-content: space-between;
		margin-right: 50px;
	}
	.popup-cart__card-title {
		width: 100%;
	}
}
@media (max-width: 700px) {
	.viewers__content {
		grid-template-columns: 1fr;
	}
}
@media (max-width: 680px) {
	.popup__content {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
	}
	.popup__img {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-pack: center;
		-ms-flex-pack: center;
		justify-content: center;
	}
	.popup__info {
		width: 100%;
	}
}
@media (max-width: 650px) {
	.popup-cart__info {
		margin-right: 15px;
	}
}
@media (max-width: 600px) {
	.nav {
		padding: 30px 0;
	}
	.nav__menu,
	.subheader .socials-list {
		display: none;
	}
	.menu__item::after {
		background-color: #fff;
		-webkit-box-shadow: 0;
		box-shadow: 0;
	}
	.hamburger {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
	}
	.header__bg-image {
		display: none;
	}
	.header__bg-image-circle {
		display: block;
	}
	.header__left {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
	}
	.header__bg-vit {
		height: 270px;
		width: 330px;
		left: -40px;
	}
	.header .header__title {
		font-size: 20px;
	}
	.header .header__item {
		font-size: 12px;
	}
	.header .header__btn {
		text-align: center;
		max-width: 163px;
		font-size: 10px;
	}
	.brands__logos {
		display: grid;
		grid-template-columns: 1fr 1fr;
	}
	.footer__container {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
	}
	.footer__logo {
		-webkit-box-ordinal-group: 0;
		-ms-flex-order: -1;
		order: -1;
	}
	.footer__copyright,
	.footer__logo {
		margin-bottom: 20px;
	}
	.product-search-form.product-search-form--product {
		margin-top: 20px;
	}
	.table__btn {
		font-size: 18px;
		padding: 23px 10px;
	}
}
@media (max-width: 580px) {
	.table__col span {
		margin-right: 20px;
	}
	.table__filter-item:not(:last-child) {
		margin-right: 24px;
	}
	.table__filter-btn {
		font-size: 13px;
	}
	.table__filter-btn--active::after {
		bottom: -14px;
	}
	.table__filter-btn--active-1::after {
		bottom: -14px !important;
	}
}
@media (max-width: 560px) {
	.popup__content {
		max-height: 100%;
	}
	.popup__text {
		padding-right: 10px;
		height: 200px;
		overflow-y: scroll;
	}
	.popup__text::-webkit-scrollbar {
		width: 4px;
		background-color: #d2d2d2;
	}
	.popup__text::-webkit-scrollbar-thumb {
		background-color: #7abc51;
		border-radius: 10px;
	}
	.popup-viewers__content {
		padding: 30px 20px;
	}
	.popup-viewers__title {
		font-size: 24px;
		margin-bottom: 20px;
	}
	.popup-viewers__btn {
		font-size: 17px;
	}
}
@media (max-width: 555px) {
	.popup-cart__content {
		padding: 30px;
	}
	.popup-cart__card {
		padding: 15px 10px;
	}
	.popup-cart__img {
		margin-right: 10px;
	}
	.popup-cart__price {
		font-size: 20px;
	}
}
@media (max-width: 550px) {
	.advantages__container {
		grid-template-columns: 1fr;
	}
}
@media (max-width: 500px) {
	.table__btn {
		font-size: 15px;
		padding: 15px 10px;
	}
	.table__col {
		position: relative;
		-webkit-box-align: start;
		-ms-flex-align: start;
		align-items: flex-start;
		overflow: hidden;
	}
	.table__col:first-child {
		margin-bottom: 10px;
	}
	.table__col span {
		padding-top: 5px;
	}
	.table__filter-menu {
		-ms-flex-wrap: wrap;
		flex-wrap: wrap;
		border-bottom: 0;
	}
	.table__filter-item {
		margin-bottom: 15px;
	}
	.table__filter-item::before {
		content: "";
		position: absolute;
		width: 100%;
		height: 1px;
		background-color: #d2d2d2;
		-webkit-transform: translateY(35px);
		-ms-transform: translateY(35px);
		transform: translateY(35px);
	}
	.viewers__title {
		font-size: 26px;
	}
	.popup-info__field--small {
		width: 80%;
	}
	.popup-info__field input::-webkit-input-placeholder {
		font-size: 12px;
	}
	.popup-info__field input::-moz-placeholder {
		font-size: 12px;
	}
	.popup-info__field input:-ms-input-placeholder {
		font-size: 12px;
	}
	.popup-info__field input::-ms-input-placeholder {
		font-size: 12px;
	}
	.popup-info__field input::placeholder {
		font-size: 12px;
	}
	.popup-info__btn {
		font-size: 12px;
		padding: 15px 0;
	}
}
@media (max-width: 468px) {
	.title {
		font-size: 28px;
	}
	.scroll-up {
		height: 34px;
		width: 34px;
	}
	.scroll-up.show-scroll {
		right: 40px;
	}
	.subheader__number,
	.subheader__text {
		font-size: 13px;
	}
	.popup-menu-wrapp {
		height: calc(100% - 139px);
		top: 139px;
	}
	.popup-menu-wrapp .popup-menu__link {
		font-size: 14px;
	}
	.header__bg-image-circle {
		bottom: 20px;
		right: -40px;
	}
	.header__bg-vit {
		height: 204px;
		width: 288px;
		left: -50px;
		top: 60px;
	}
	.products__more {
		font-size: 15px;
	}
	.card__img {
		max-width: 270px;
		max-height: 274px;
		margin-bottom: 0;
	}
	.card__title {
		font-size: 24px;
	}
	.card__button-buy,
	.card__descr,
	.card__more,
	.purpose__info p {
		font-size: 15px;
	}
	.purpose__content {
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
	}
	.purpose__info {
		width: 100%;
	}
	.purpose__img {
		width: 80%;
		margin-bottom: 40px;
	}
	.reviews__text {
		font-size: 17px;
	}
	.product-search-form__input {
		padding-top: 15px;
		padding-bottom: 15px;
	}
	.product-search-form__input::-webkit-input-placeholder {
		font-size: 14px;
	}
	.product-search-form__input::-moz-placeholder {
		font-size: 14px;
	}
	.product-search-form__input:-ms-input-placeholder {
		font-size: 14px;
	}
	.product-search-form__input::-ms-input-placeholder {
		font-size: 14px;
	}
	.product-search-form__input::placeholder {
		font-size: 14px;
	}
	.product-search-form__btn {
		font-size: 12px;
	}
	.table__menu {
		grid-template-columns: 1fr 50px;
	}
	.table__menu::before {
		content: "";
		position: absolute;
		background: url(../img/shadow.png);
		height: 91px;
		width: 115px;
		right: 0;
		z-index: 10;
	}
	.table__filter-top-menu {
		-webkit-transform: translateX(0);
		-ms-transform: translateX(0);
		transform: translateX(0);
	}
	.table__filter {
		-webkit-transform: translateY(-50px);
		-ms-transform: translateY(-50px);
		transform: translateY(-50px);
		opacity: 0;
		max-height: 0;
		overflow: hidden;
		-webkit-transition: max-height 0.2s ease-out, opacity 0.2s ease-out, -webkit-transform 0.2s ease-out;
		-o-transition: max-height 0.2s ease-out, transform 0.2s ease-out, opacity 0.2s ease-out;
		transition: max-height 0.2s ease-out, transform 0.2s ease-out, opacity 0.2s ease-out;
		transition: max-height 0.2s ease-out, transform 0.2s ease-out, opacity 0.2s ease-out,
			-webkit-transform 0.2s ease-out;
	}
	.table__filter--active {
		opacity: 1;
		-webkit-transform: translateY(0);
		-ms-transform: translateY(0);
		transform: translateY(0);
	}
	.table__filter-icon--hidden {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
	}
	.viewers__title {
		font-size: 20px;
	}
	.viewers__descr {
		font-size: 13px;
	}
	.viewers__btn {
		width: 120px;
		height: 120px;
	}
	.view__img img {
		width: 100px;
	}
	.view__name {
		font-size: 20px;
	}
	.view__date {
		font-size: 15px;
	}
	.view__text {
		font-size: 12px;
	}
	.delivery__text {
		font-display: 15px;
	}
	.delivery__btn-link {
		font-size: 12px;
		padding: 10px 30px;
	}
	.delivery__img {
		margin-bottom: 40px;
	}
	.cart-icon {
		height: 65px;
		width: 65px;
	}
	.cart-icon svg {
		width: 40px;
	}
	.cart-icon__elements {
		height: 20px;
		width: 20px;
		font-size: 14px;
		right: 6px;
		top: 13px;
	}
	.cart-icon__elements span {
		-webkit-transform: translateY(0);
		-ms-transform: translateY(0);
		transform: translateY(0);
	}
	.popup__content {
		padding: 30px 20px;
	}
	.popup__close {
		right: 10px;
		top: 10px;
	}
	.popup__title {
		font-size: 20px;
	}
	.popup__img {
		margin: 0 auto;
		height: 240px;
		width: 200px;
	}
	.popup__img img {
		width: 100%;
	}
	.popup__price {
		padding-top: 5px;
		font-size: 24px;
	}
	.popup .card__changed-thing {
		padding: 0 20px;
	}
	.popup__btn {
		font-size: 12px;
	}
	.popup-cart__blocks {
		max-height: 80%;
		padding-bottom: 110px;
	}
	.popup-cart__content {
		padding: 30px 25px;
	}
	.popup-cart__img {
		margin-right: 10px;
	}
	.popup-cart__card-title {
		font-size: 17px;
	}
	.popup-cart__buy-btn {
		position: relative;
		font-size: 17px;
		z-index: 10;
		width: 100%;
	}
	.popup-cart__bottom::before {
		top: -139px;
		background-image: url(../img/shadow-cart2.png);
	}
	.popup-viewers__field input {
		padding: 12px 18px;
		max-width: 100%;
		width: 100%;
	}
	.popup-viewers__field input::-webkit-input-placeholder {
		font-size: 15px;
	}
	.popup-viewers__field input::-moz-placeholder {
		font-size: 15px;
	}
	.popup-viewers__field input:-ms-input-placeholder {
		font-size: 15px;
	}
	.popup-viewers__field input::-ms-input-placeholder {
		font-size: 15px;
	}
	.popup-viewers__field input::placeholder {
		font-size: 15px;
	}
	.popup-viewers__btn {
		width: 100%;
	}
	@supports (-webkit-appearance: none) {
		.table__menu::before {
			background: url(../img/shadow.webp);
		}
		.popup-cart__bottom::before {
			background-image: url(../img/shadow-cart2.webp);
		}
	}
}
@media (max-width: 420px) {
	.title {
		font-size: 20px;
	}
	.subheader__container {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
	}
	.subheader__text {
		margin-bottom: 10px;
	}
	.menu {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
	}
	.menu__item:not(:last-child) {
		margin-right: 0;
		margin-bottom: 20px;
	}
	.popup-menu-wrapp {
		height: calc(100% - 165px);
		top: 165px;
	}
	.header__container,
	.header__left {
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
	}
	.header__container {
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
	}
	.header__left {
		z-index: 2;
	}
	.header__bg-vit {
		height: 204px;
		width: 288px;
		left: 0;
		top: 0;
	}
	.header .header__title {
		text-align: center;
		font-size: 17px;
		max-width: 200px;
	}
	.header .header__item {
		font-size: 10px;
		background-size: 15px;
		padding-left: 20px;
		background-position: left -1px;
	}
	.header .header__btn {
		font-size: 6px;
		max-width: 107px;
		width: 100%;
	}
	.brands__descr {
		font-size: 13px;
	}
	.table__filter-top-menu .swiper-slide {
		padding: 15px 4px 20px;
	}
	.table__filter-icon {
		-webkit-transform: translateY(-3px);
		-ms-transform: translateY(-3px);
		transform: translateY(-3px);
	}
	.contacts__title,
	.delivery__title {
		font-size: 24px;
	}
	.cart-icon {
		height: 60px;
		width: 60px;
	}
	.cart-icon svg {
		width: 35px;
	}
	.cart-icon__elements {
		height: 18px;
		width: 18px;
		font-size: 12px;
		right: 6px;
		top: 13px;
	}
	.popup-cart__info {
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
	}
	.popup-cart__change-thing {
		margin-bottom: 10px;
	}
	.popup-viewers__radios label {
		font-size: 15px;
	}
	.popup-viewers__content {
		padding: 30px 15px;
	}
}
@media (max-width: 380px) {
	.search-form__input {
		padding: 12px 12px 12px 35px;
		background-size: 15px;
		background-position: 13px center;
	}
	.card__func {
		-webkit-box-orient: vertical;
		-webkit-box-direction: reverse;
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
		-webkit-box-align: start;
		-ms-flex-align: start;
		align-items: flex-start;
	}
	.card__price {
		margin-bottom: 20px;
	}
	.product-search-form__input {
		padding-top: 12px;
		padding-bottom: 12px;
	}
	.product-search-form__input::-webkit-input-placeholder {
		font-size: 12px;
	}
	.product-search-form__input::-moz-placeholder {
		font-size: 12px;
	}
	.product-search-form__input:-ms-input-placeholder {
		font-size: 12px;
	}
	.product-search-form__input::-ms-input-placeholder {
		font-size: 12px;
	}
	.product-search-form__input::placeholder {
		font-size: 12px;
	}
}
@media (max-width: 360px) {
	.popup-cart__title {
		font-size: 24px;
		margin-bottom: 30px;
	}
	.popup-cart__content {
		padding: 30px 10px;
	}
	.popup-cart__card-title {
		font-size: 12px;
		margin-bottom: 10px;
	}
	.popup-cart__thing {
		font-size: 17px;
	}
	.popup-cart__buy-btn {
		width: 100%;
		font-size: 17px;
	}
}
@media (max-width: 350px) {
	.card__img {
		max-height: 234px;
	}
	.popup-viewers__radios label {
		font-size: 13px;
	}
}
@media (max-width: 320px) {
	.card__title {
		font-size: 20px;
	}
	.reviews__title {
		margin-bottom: 40px;
	}
	.table__col span {
		padding-top: 8px;
		font-size: 12px;
	}
	.viewers__title {
		font-size: 18px;
	}
	.viewers__descr {
		font-size: 12px;
	}
	.delivery__title {
		font-size: 20px;
	}
	.delivery__text {
		font-size: 13px;
	}
	.contacts {
		padding: 20px 0;
	}
	.contacts__title {
		font-size: 20px;
		margin-bottom: 20px;
	}
	.contacts__text {
		font-size: 13px;
		margin-bottom: 10px;
	}
	.contacts__num {
		font-size: 15px;
	}
	.popup-cart__text {
		text-align: center;
		font-size: 12px;
	}
	.popup-info__title {
		font-size: 20px !important;
	}
}
@media (max-height: 720px) {
	.popup__content {
		max-height: 700px;
		height: 100%;
		overflow-y: auto;
	}
	.popup__text {
		margin-bottom: 10px;
	}
	.popup__btn {
		margin-top: 20px;
	}
}
@media (max-height: 700px) {
	.popup-cart__blocks {
		height: 70%;
	}
}
@media (max-height: 820px) {
	.popup-info__title {
		font-size: 28px;
		margin-bottom: 20px;
	}
	.popup-info__content {
		height: 90%;
	}
	.popup-info__fields {
		height: 80%;
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
		justify-content: space-between;
	}
	.popup-info__field {
		margin-bottom: 5px;
	}
	.popup-info__field label {
		font-size: 14px;
	}
	.popup-info__btn {
		margin-top: 10px;
	}
}
@media (max-height: 650px) {
	.popup-info__fields {
		overflow-y: scroll;
		padding-right: 10px;
	}
	.popup-info__fields::-webkit-scrollbar {
		width: 4px;
		background-color: #d2d2d2;
	}
	.popup-info__fields::-webkit-scrollbar-thumb {
		background-color: #7abc51;
		border-radius: 10px;
	}
}
@media (max-height: 540px) {
	.popup-viewers__content {
		height: 100%;
	}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.table__btn--active {
	background: #7abc51;
	color: #fff;
}
.hidden {
	display: none;
}

.popup-close {
	cursor: pointer;
}

.popup-cart__close {
	cursor: pointer;
}
.card__more {
	cursor: pointer;
}
.popup__close {
	cursor: pointer;
}
.update-cart {
	cursor: pointer;
}
.increase {
	cursor: pointer;
}
.increase-popup {
	cursor: pointer;
}

.card__changed-btn,
.prev {
	cursor: pointer;
}
.not-scroll {
	overflow: hidden;
}
.cart-icon {
	cursor: pointer;
}
.table__btn--active-1 {
	background: #7abc51;
	color: #fff;
}
.table__filter-btn--active-1::after {
	background: #7abc51;
	content: "";
	position: absolute;
	bottom: -11px;
	width: 100%;
	left: 0;
	height: 2px;
}
.green {
	border-color: #7abc51;
}
.green-svg {
	color: #7abc51;
}
